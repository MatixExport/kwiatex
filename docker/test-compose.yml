version: '3.8'

services:
  mongo1:
    build:
      context: .
      dockerfile: customMongoDB
#    container_name: mongo1
    hostname: mongo1
    networks:
      - mongonet
    ports:
      - "2017:2017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ADMIN
      - MONGO_INITDB_ROOT_PASSWORD=ADMINPASSWORD
      - MONGO_INITDB_DATABASE=KWIATEX
    command: --config /etc/mongod.conf --port 2017
    healthcheck:
      test: ["CMD","mongosh", "--port", "2017", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 2s
      retries: 5
  mongo2:
    build:
      context: .
      dockerfile: customMongoDB
#    container_name: mongo2
    hostname: mongo2
    networks:
      - mongonet
    ports:
      - "2018:2018"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ADMIN
      - MONGO_INITDB_ROOT_PASSWORD=ADMINPASSWORD
      - MONGO_INITDB_DATABASE=KWIATEX
    command: --config /etc/mongod.conf --port 2018
    healthcheck:
      test: ["CMD","mongosh", "--port", "2018", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 2s
      retries: 5
  mongo3:
    build:
      context: .
      dockerfile: customMongoDB
#    container_name: mongo3
    hostname: mongo3
    networks:
      - mongonet
    ports:
      - "2019:2019"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ADMIN
      - MONGO_INITDB_ROOT_PASSWORD=ADMINPASSWORD
      - MONGO_INITDB_DATABASE=KWIATEX
    command: --config /etc/mongod.conf --port 2019
    healthcheck:
      test: ["CMD","mongosh", "--port", "2019", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 2s
      retries: 5



  mongoinit:
    build:
      context: .
      dockerfile: customMongoDB
    hostname: mongodbinit
#    container_name: mongodbinit
    networks:
      - mongonet
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy

    command: >
      mongosh --host mongo1:2017 --username ADMIN --password ADMINPASSWORD --authenticationDatabase admin --eval
      '
      rs.initiate(
        {
          _id: "replica_set_single",
          version: 1,
          members: [
            {_id:0, host : "mongo1:2017" },
            {_id:1, host : "mongo2:2018" },
            {_id:2, host : "mongo3:2019" }
          ]
        }
      );
      '

networks:
  mongonet: {}


